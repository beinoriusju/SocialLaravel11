# Update and upgrade system packages
sudo apt update
sudo apt upgrade -y

# Install Nginx
sudo apt install nginx -y

# Allow Nginx through the firewall
sudo ufw allow 'Nginx Full'

# Install PHP 8.3 and necessary PHP extensions
sudo apt install php8.3 php8.3-fpm php8.3-mbstring php8.3-gd php8.3-xml php8.3-cli php8.3-zip php8.3-curl php8.3-intl php8.3-bcmath php8.3-mysql php8.3-soap php8.3-ldap php8.3-imap php8.3-opcache php8.3-redis php8.3-sqlite3 -y

# Configure PHP
sudo nano /etc/nginx/nginx.conf
sudo nano /etc/php/8.3/fpm/php.ini

# Restart PHP 8.3-FPM service
sudo systemctl restart php8.3-fpm

# Install MySQL server
sudo apt install mysql-server -y

# Configure MySQL root user with native password authentication
sudo mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'Ktz235N788??';
exit

# Test MySQL root login
sudo mysql_secure_installation
sudo mysql -p
CREATE DATABASE laravelexample CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
exit

#Install project
cd /var/www/
git clone https://github.com/Vaidas393/SocialLaravel11.git laravelexample

# Set directory permissions for the Laravel application
cd /var/www/
sudo chgrp -R www-data /var/www/laravelexample
sudo chmod -R 775 /var/www/laravelexample/storage/

# Install Composer
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer

# Install Laravel dependencies and set up environment
cd /var/www/laravelexample
composer install
composer update
php artisan key:generate
php artisan storage:link
php artisan migrate

# Nginx site configuration for Laravel
sudo nano /etc/nginx/sites-available/laravelexample

# Paste the following configuration into the file
server {
    listen 80;
    server_name vpsocial.site;
    root /var/www/laravelexample/public;

    index index.php index.html index.htm;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}

# Enable the Nginx configuration and test it
sudo ln -s /etc/nginx/sites-available/laravelexample /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl restart nginx

# Install Certbot for SSL certificate management
sudo apt install certbot python3-certbot-nginx -y

# Obtain and configure SSL certificate for Nginx
sudo certbot --nginx -d vpsocial.site

# Install Node.js and npm
cd /
curl -fsSL https://deb.nodesource.com/setup_23.x -o nodesource_setup.sh
sudo -E bash nodesource_setup.sh
sudo apt install -y nodejs

# Build Laravel front-end assets
cd /var/www/laravelexample
npm install
npm run build

updated file after encryption

server {
    listen 80;
    server_name vpsocial.site;
    return 301 https://$host$request_uri;  # Redirect all HTTP requests to HTTPS
}

server {
    listen 443 ssl;
    server_name vpsocial.site;
    root /var/www/laravelexample/public;

    index index.php index.html index.htm;

    ssl_certificate /etc/letsencrypt/live/vpsocial.site/fullchain.pem;  # Adjust this path if needed
    ssl_certificate_key /etc/letsencrypt/live/vpsocial.site/privkey.pem;  # Adjust this path if needed

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}


Instal my admin
cd /var/www/laravelexample
sudo apt update
sudo apt install phpmyadmin -y
sudo nano /etc/nginx/sites-available/laravelexample

server {
    listen 80;
    server_name vpsocial.site;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name vpsocial.site;
    root /var/www/laravelexample/public;

    index index.php index.html index.htm;

    ssl_certificate /etc/letsencrypt/live/vpsocial.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vpsocial.site/privkey.pem;

    # Allow large file uploads
    client_max_body_size 100M;  # Set the desired size limit

    # phpMyAdmin location block
    location /phpmyadmin {
        alias /usr/share/phpmyadmin;  # Ensure this path is correct
        index index.php index.html index.htm;

        # Handle PHP files in phpMyAdmin
        location ~ ^/phpmyadmin/(.+\.php)$ {
            fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;  # Ensure this matches your PHP-FPM version
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /usr/share/phpmyadmin/$1;  # Use the correct path here
            include fastcgi_params;
        }

        location ~ ^/phpmyadmin/(.+\.ht) {
            deny all;
        }
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  # This is fine
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}


sudo chmod -R 755 /usr/share/phpmyadmin
sudo chown -R www-data:www-data /usr/share/phpmyadmin
sudo nginx -t
sudo systemctl restart nginx

https://vpsocial.site/phpmyadmin
 Works!!!!!!!!!

 https://vpsocial.site/admin/dashboard
 admin@mail.com Ktz235N788??

Revervb
sudo apt update
sudo apt install supervisor -y
sudo nano /etc/supervisor/conf.d/laravel-reverb.conf

[program:laravel-reverb]
process_name=%(program_name)s_%(process_num)02d
command=php /var/www/laravelexample/artisan reverb:start --port=8080  # Adjust the port here
autostart=true
autorestart=true
stopasgroup=true
killasgroup=true
user=www-data  # Or another user
numprocs=1
redirect_stderr=true
stdout_logfile=/var/log/laravel-reverb.log
stopwaitsecs=3600


sudo nano /etc/nginx/sites-available/laravelexample


server {
    listen 80;
    server_name vpsocial.site;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name vpsocial.site;
    root /var/www/laravelexample/public;

    index index.php index.html index.htm;

    ssl_certificate /etc/letsencrypt/live/vpsocial.site/fullchain.pem;  # Ensure this path is correct
    ssl_certificate_key /etc/letsencrypt/live/vpsocial.site/privkey.pem;  # Ensure this path is correct

    # Allow large file uploads
    client_max_body_size 50G;  # Set the desired size limit to 50GB

    # Increase buffer settings
    client_body_buffer_size 1512k;  # Increase body buffer size
    proxy_buffer_size 1512k;  # Increase the buffer size for proxied requests
    proxy_buffers 8 1512k;  # Use 8 buffers of 512k
    proxy_busy_buffers_size 1512k;  # Adjust busy buffer size

    # phpMyAdmin location block
    location /phpmyadmin {
        alias /usr/share/phpmyadmin;  # Ensure this path is correct
        index index.php index.html index.htm;

        # Handle PHP files in phpMyAdmin
        location ~ ^/phpmyadmin/(.+\.php)$ {
            fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;  # Ensure this matches your PHP-FPM version
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME /usr/share/phpmyadmin/$1;  # Use the correct path here
            include fastcgi_params;
        }

        location ~ ^/phpmyadmin/(.+\.ht) {
            deny all;
        }
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  # This is fine
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

    # Reverb configuration
    location /reverb {
        proxy_pass http://127.0.0.1:8082;  # Ensure this is your Reverb server address
        proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket support
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;  # Upgrade header for WebSocket
        proxy_set_header Connection "Upgrade";  # Connection header for WebSocket
    }
}

# Additional server block for Reverb
server {
    listen 8081 ssl;
    server_name vpsocial.site;  # Ensure this matches your domain

    ssl_certificate /etc/letsencrypt/live/vpsocial.site/fullchain.pem;  # Adjust this path if needed
    ssl_certificate_key /etc/letsencrypt/live/vpsocial.site/privkey.pem;  # Adjust this path if needed

    location / {
        proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket support
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;  # Upgrade header for WebSocket
        proxy_set_header Connection "Upgrade";  # Connection header for WebSocket

        proxy_pass http://127.0.0.1:8082;  # Adjust this to your Reverb service address
    }
}


mkdir -p /home/user/htdocs/srv625407.hstgr.cloud/

sudo supervisorctl reread
sudo supervisorctl update
sudo supervisorctl start laravel-reverb
